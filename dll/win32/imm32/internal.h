/*
 * PROJECT:     ReactOS IMM32
 * LICENSE:     LGPL-2.1-or-later (https://spdx.org/licenses/LGPL-2.1-or-later)
 * PURPOSE:     Defining internal codes of IME Software Keyboard
 * COPYRIGHT:   Copyright 2023 Katayama Hirofumi MZ <katayama.hirofumi.mz@gmail.com>
 */

/* DEFINE_IC(internal_code, virtual_key_code, internal_code_name, virtual_key_name, is_special) */
DEFINE_IC( 0, 0xC0, IC_BACKTICK  , VK_OEM_3,      FALSE)
DEFINE_IC( 1, 0x31, IC_1         , VK_1,          FALSE)
DEFINE_IC( 2, 0x32, IC_2         , VK_2,          FALSE)
DEFINE_IC( 3, 0x33, IC_3         , VK_3,          FALSE)
DEFINE_IC( 4, 0x34, IC_4         , VK_4,          FALSE)
DEFINE_IC( 5, 0x35, IC_5         , VK_5,          FALSE)
DEFINE_IC( 6, 0x36, IC_6         , VK_6,          FALSE)
DEFINE_IC( 7, 0x37, IC_7         , VK_7,          FALSE)
DEFINE_IC( 8, 0x38, IC_8         , VK_8,          FALSE)
DEFINE_IC( 9, 0x39, IC_9         , VK_9,          FALSE)
DEFINE_IC(10, 0x30, IC_0         , VK_0,          FALSE)
DEFINE_IC(11, 0xBD, IC_MINUS     , VK_OEM_MINUS,  FALSE)
DEFINE_IC(12, 0xBB, IC_PLUS      , VK_OEM_PLUS,   FALSE)
DEFINE_IC(13, 0xDC, IC_OEM_5     , VK_OEM_5,      FALSE)
DEFINE_IC(14, 0x51, IC_Q         , VK_Q,          FALSE)
DEFINE_IC(15, 0x57, IC_W         , VK_W,          FALSE)
DEFINE_IC(16, 0x45, IC_E         , VK_E,          FALSE)
DEFINE_IC(17, 0x52, IC_R         , VK_R,          FALSE)
DEFINE_IC(18, 0x54, IC_T         , VK_T,          FALSE)
DEFINE_IC(19, 0x59, IC_Y         , VK_Y,          FALSE)
DEFINE_IC(20, 0x55, IC_U         , VK_U,          FALSE)
DEFINE_IC(21, 0x49, IC_I         , VK_I,          FALSE)
DEFINE_IC(22, 0x4F, IC_O         , VK_O,          FALSE)
DEFINE_IC(23, 0x50, IC_P         , VK_P,          FALSE)
DEFINE_IC(24, 0xDB, IC_OEM_4     , VK_OEM_4,      FALSE)
DEFINE_IC(25, 0xDD, IC_OEM_6     , VK_OEM_6,      FALSE)
DEFINE_IC(26, 0x41, IC_A         , VK_A,          FALSE)
DEFINE_IC(27, 0x53, IC_S         , VK_S,          FALSE)
DEFINE_IC(28, 0x44, IC_D         , VK_D,          FALSE)
DEFINE_IC(29, 0x46, IC_F         , VK_F,          FALSE)
DEFINE_IC(30, 0x47, IC_G         , VK_G,          FALSE)
DEFINE_IC(31, 0x48, IC_H         , VK_H,          FALSE)
DEFINE_IC(32, 0x4A, IC_J         , VK_J,          FALSE)
DEFINE_IC(33, 0x4B, IC_K         , VK_K,          FALSE)
DEFINE_IC(34, 0x4C, IC_L         , VK_L,          FALSE)
DEFINE_IC(35, 0xBA, IC_OEM_1     , VK_OEM_1,      FALSE)
DEFINE_IC(36, 0xDE, IC_OEM_7     , VK_OEM_7,      FALSE)
DEFINE_IC(37, 0x5A, IC_Z         , VK_Z,          FALSE)
DEFINE_IC(38, 0x58, IC_X         , VK_X,          FALSE)
DEFINE_IC(39, 0x43, IC_C         , VK_C,          FALSE)
DEFINE_IC(40, 0x56, IC_V         , VK_V,          FALSE)
DEFINE_IC(41, 0x42, IC_B         , VK_B,          FALSE)
DEFINE_IC(42, 0x4E, IC_N         , VK_N,          FALSE)
DEFINE_IC(43, 0x4D, IC_M         , VK_M,          FALSE)
DEFINE_IC(44, 0xBC, IC_OEM_COMMA , VK_OEM_COMMA,  FALSE)
DEFINE_IC(45, 0xBE, IC_OEM_PERIOD, VK_OEM_PERIOD, FALSE)
DEFINE_IC(46, 0xBF, IC_OEM_2     , VK_OEM_2,      FALSE)
DEFINE_IC(47, 0x08, IC_BACKSPACE , VK_BACK,       TRUE)
DEFINE_IC(48, 0x09, IC_TAB       , VK_TAB,        TRUE)
DEFINE_IC(49, 0x14, IC_CAPS      , VK_CAPITAL,    TRUE)
DEFINE_IC(50, 0x0D, IC_ENTER     , VK_RETURN,     TRUE)
DEFINE_IC(51, 0x10, IC_L_SHIFT   , VK_SHIFT,      TRUE)
DEFINE_IC(52, 0x10, IC_R_SHIFT   , VK_SHIFT,      TRUE)
DEFINE_IC(53, 0x11, IC_L_CTRL    , VK_CONTROL,    TRUE)
DEFINE_IC(54, 0x11, IC_R_CTRL    , VK_CONTROL,    TRUE)
DEFINE_IC(55, 0x12, IC_L_ALT     , VK_MENU,       TRUE)
DEFINE_IC(56, 0x12, IC_R_ALT     , VK_MENU,       TRUE)
DEFINE_IC(57, 0x1B, IC_ESCAPE    , VK_ESCAPE,     TRUE)
DEFINE_IC(58, 0x20, IC_SPACE     , VK_SPACE,      TRUE)
DEFINE_IC(59, 0x00, IC_NONE      , 0,             TRUE)
